{"version":3,"sources":["./src/environments/environment.ts","./src/app/tasks/tasks.component.ts","./src/app/tasks/tasks.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/_services/projects.service.ts","./src/app/app-routing.module.ts","./src/app/project-management/project-management.component.ts","./src/app/project-management/project-management.component.html","./src/main.ts","./src/app/_models/project.model.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h3>Project Tasks</h3>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'project-management';\n}\n","\n<nav class=\"navbar navbar-light bg-dark\">\n<<<<<<< HEAD:delete-edit-demo/src/app/app.component.html\n  <ul class=\"nav\">\n    <li class=\"nav-item\">\n      <a [routerLink]=\"'names-management'\" class=\"navbar-brand text-light\">Names Management</a>\n    </li>\n    <li class=\"nav-item\">\n      <a [routerLink]=\"'tasks'\" class=\"navbar-brand text-light\">Tasks</a>\n    </li>\n  </ul>\n=======\n  <a [routerLink]=\"'project-management'\" class=\"navbar-brand text-light\">Project Management</a>\n>>>>>>> efbe409a392359449a4870e5a0e35693eee5e8d5:project-management/src/app/app.component.html\n</nav>\n\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ProjectManagementComponent } from \"./project-management/project-management.component\";\nimport { FormsModule } from \"@angular/forms\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbDatepickerModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TasksComponent } from './tasks/tasks.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TasksComponent,\n    ProjectManagementComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    NgbModule,\n\tNgbDatepickerModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { environment } from \"../../environments/environment\";\nimport { Project } from \"../_models/project.model\";\nimport { map } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectsService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getAll(): Observable<any> {\n    return this.httpClient.get<any>(`${environment.apiUrl}/names`)\n  }\n\n  create( newName ): Observable<Project> {\n    return this.httpClient.post<any>(`${environment.apiUrl}/name`, {name: newName})\n      .pipe(map(newName => new Project(newName.name)));\n  }\n \n  destroy( name ): Observable<any> {\n    return this.httpClient.delete(`${environment.apiUrl}/name/${name._id}`)\n  }\n\n  removeProject( arrayNames, nameToRemove ): any{\n    for (let i = 0; i <= arrayNames.length; i++) {\n      if (arrayNames[i]._id === nameToRemove._id) {\n        arrayNames.splice(i, 1);\n        return arrayNames;\n      }\n    }\n  }\n\n  updateProject( nameToUpdate ): any{\n    let options = { name: nameToUpdate.name, _id: nameToUpdate._id };\n    return this.httpClient.request<any>('PUT', `${environment.apiUrl}/update/`, { body: options });\n    //return this.httpClient.request<any>('PUT', `${environment.apiUrl}/update/${nameToUpdate._id}/${nameToUpdate.name}`);\n  }\n\n  editProject( arrayNames, nameToEdit ): any{\n    for (let i = 0; i <= arrayNames.length; i++) {\n      if (arrayNames[i]._id === nameToEdit._id) {\n        arrayNames[i].name = nameToEdit.name;\n        return arrayNames;\n      }\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProjectManagementComponent } from \"./project-management/project-management.component\";\n\nconst routes: Routes = [\n  {path: 'project-management', component: ProjectManagementComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ProjectsService } from \"../_services/projects.service\";\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport { NgbDatepickerModule } from '@ng-bootstrap/ng-bootstrap';\nimport { Project } from \"../_models/project.model\";\n\n//import { timer } from 'rxjs';\n\n\n\n@Component({\n  selector: 'app-projects-management',\n  templateUrl: './project-management.component.html',\n  styleUrls: ['./project-management.component.css']\n})\n\nexport class ProjectManagementComponent implements OnInit {\n  public newProject;\n  public projects;\n  public editProject = new Project();\n\n  constructor(\n    private projectsService: ProjectsService,\n    private modalService: NgbModal\n  ) { }\n\n  ngOnInit(): void {\n    this.projectsService.getAll().subscribe(returnProjects => {\n      this.projects = returnProjects.docs;\n    })\n  }\n\n  saveProject(): void {\n    this.projectsService.create(this.newProject).subscribe( saveProject => {\n      this.projects.push(saveProject);\n    })\n  }\n\n  deleteProject(projectToDelete): void {\n    this.projectsService.destroy(projectToDelete).subscribe(success => {\n      this.projects = this.projectsService.removeProject(this.projects, projectToDelete);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  newEditProject(content, project): void {\n    this.editProject = project;\n    this.modalService.open(content).result.then((result) => {\n      this.saveEditedProject(this.editProject);\n    }, (reason) => {})\n  }\n\n  saveEditedProject(projectToEdit): void {\n    this.projectsService.updateProject(projectToEdit).subscribe(success => {\n      console.log(\"saveEditedProject: \"+JSON.stringify(projectToEdit));\n      this.projects = this.projectsService.editProject(this.projects, projectToEdit);\n    }, error => {\n      console.log(error);\n    })\n\n  }\n}\n","<input [(ngModel)]=\"newProject\">\n<button (click)=\"saveProject()\">Save</button>\n\n<input type=\"text\" ngbDatepicker #d=\"ngbDatepicker\"/>\n<button (click)=\"d.toggle()\">Start Date</button>\n\n<input type=\"text\" ngbDatepicker #a=\"ngbDatepicker\"/>\n<button (click)=\"a.toggle()\" >End Date</button>\n\n\n<h3>Projects!</h3>\n<div *ngFor=\"let project of projects\">\n  <div class=\"row\">\n    <h4>{{ project.name }}</h4>\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteProject(project)\">Delete</button>\n    <button type=\"button\" class=\"btn btn-secondary\" (click)=\"newEditProject(editModal, project)\">Edit</button>\n  </div>\n</div>\n\n\n<ng-template #editModal let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\">Edit Project</h4>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n   <!-- <form>-->\n      <!--<div class=\"form-group\">-->\n      <div>\n        <label for=\"editProjectInput\">Edit the selected prject:</label>\n        <div class=\"input-group\">\n          <input id=\"editProjectInput\" class=\"form-control\" [(ngModel)]=\"editProject.name\" project=\"Edit Project\">\n        \t\n\t\t    </div>\n      </div>\n    <!--/form>-->\n  </div>\n  <div class=\"modal-footer\">\n\t<input type=\"text\" ngbDatepicker #d=\"ngbDatepicker\"/>\n\t<button (click)=\"d.toggle()\">Start Date</button>\n\n\t<input type=\"text\" ngbDatepicker #a=\"ngbDatepicker\"/>\n\t<button (click)=\"a.toggle()\" >End Date</button>\n\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"modal.close()\">Save</button>\n  </div>\n</ng-template>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","export class Project {\n  name: string;\n  //start: date;\n  //end: date;\n\n  constructor(name: string = '') {\n    this.name = name;\n  }\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}