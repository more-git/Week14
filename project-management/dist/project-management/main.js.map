{"version":3,"sources":["ws (ignored)","./src/environments/environment.ts","./src/app/task/task.component.ts","./src/app/task/task.component.html","./src/app/tasks/tasks.component.ts","./src/app/tasks/tasks.component.html","./src/app/_services/timer.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/_services/tasks.service.ts","./src/app/_services/projects.service.ts","./src/app/app-routing.module.ts","./src/app/project-management/project-management.component.ts","./src/app/project-management/project-management.component.html","./src/main.ts","./src/app/_models/project.model.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/* (ignored) */","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:8080'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {TasksService} from \"../_services/tasks.service\";\r\n//import { PubSubService } from '../_services/pubsub.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {switchMap } from 'rxjs/operators';\r\n\r\n\r\n@Component({\r\n  selector: 'app-task',\r\n  templateUrl: './task.component.html',\r\n  styleUrls: ['./task.component.css']\r\n})\r\n\r\nexport class TaskComponent implements OnInit {\r\n  public newTask;\r\n  public tasks;\r\n\r\n  public projectId;\r\n  //public project;\r\n\r\n\r\n  constructor(\r\n    private tasksService: TasksService,\r\n    private route: ActivatedRoute,\r\n    private location: Location,\r\n    private router: Router,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.projectId = this.route.snapshot.params['id'];\r\n\r\n    this.tasksService.getTasks().subscribe(returnTasks => {\r\n      this.tasks = returnTasks.docs;\r\n      this.tasksService.displayProjectTasks(this.tasks, this.projectId);\r\n    })\r\n\r\n\r\n    console.log(\"projectId = \"+ this.projectId);\r\n    //if (this.projectId) {\r\n    //        this.title = 'Edit Product';\r\n    //        this.projectService.getById(this.projectId).subscribe(x => this.project = x);\r\n    //    }\r\n    \r\n\r\n  }\r\n\r\n  saveTask(){\r\n    this.tasksService.create(this.newTask, this.projectId).subscribe( saveTask => {\r\n      this.tasks.push(saveTask);\r\n    })\r\n  }\r\n\r\n\r\n\r\n  deleteTask(taskToDelete): void {\r\n    this.tasksService.destroy(taskToDelete).subscribe(success => {\r\n      this.tasks = this.tasksService.removeTasks(this.tasks, taskToDelete);\r\n    }, error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n\r\n}\r\n","<h3>Tasks</h3>\r\n<input [(ngModel)]=\"newTask\">\r\n<button (click)=\"saveTask()\">Save</button>\r\n<div *ngFor=\"let task of tasks\">\r\n  <div class=\"row\">\r\n    <h4>{{task.name}}</h4>\r\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteTask(task)\">Delete</button>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {TasksService} from \"../_services/tasks.service\";\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\nimport { TimerService } from \"../_services/timer.service\";\r\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { NgbDatepickerModule } from '@ng-bootstrap/ng-bootstrap';\r\n//import { Project } from \"../_models/project.model\";\r\nimport { Task } from \"../_models/task.model\";\r\nimport { interval } from 'rxjs';\r\n\r\nimport {switchMap } from 'rxjs/operators';\r\n\r\n\r\n@Component({\r\n  selector: 'app-task',\r\n  templateUrl: './tasks.component.html',\r\n  styleUrls: ['./tasks.component.css']\r\n})\r\n\r\nexport class TasksComponent implements OnInit {\r\n  public newTask;\r\n  public tasks;\r\n  public projectId;\r\n  public taskId;\r\n\r\n  constructor(\r\n    private tasksService: TasksService,\r\n    private route: ActivatedRoute,\r\n    private location: Location,\r\n    private timerService: TimerService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.tasksService.getTasks().subscribe(returnTasks => {\r\n      this.tasks = returnTasks.docs;\r\n    })\r\n  }\r\n\r\n  saveTask(){\r\n    this.tasksService.create(this.newTask, this.taskId).subscribe( saveTask => {\r\n      if (saveTask) this.tasks.push(saveTask);\r\n    })\r\n  }\r\n\r\n  startTask(task): void {\r\n    console.log(\"start(\"+task.name+\")\");\r\n    this.timerService.startTask(task.name);\r\n  }\r\n\r\n  stopTask(task): void {\r\n    \r\n    console.log(\"stop(\"+task.name+\")\");\r\n    console.log(\"task_id = \"+task.task_id);\r\n    this.timerService.stopTask(task.name);\r\n\r\n    this.timerService.updateTimer(task.name).subscribe(totalTime => {\r\n      task.totalTime = totalTime;\r\n    })\r\n\r\n    /*this.timerService.updateTotalTime(task.task_id).subscribe(totalTime => {\r\n      task.totalTime = totalTime;\r\n    })*/\r\n\r\n  }\r\n\r\n\r\n}","<h3>Tasks</h3>\r\n<input [(ngModel)]=\"newTask\">\r\n<button (click)=\"saveTask()\">Save</button>\r\n<div *ngFor=\"let task of tasks\">\r\n  <div class=\"row\">\r\n\r\n    <h4>{{task.name}}  \r\n      <button class = \"startTask\" (click)=\"startTask(task)\">Start</button>\r\n      <button class = \"stopTask\" (click)=\"stopTask(task)\">Stop</button>\r\n    </h4>     \r\n    <h4>Total Time: {{ task.totalTime }}</h4>\r\n  </div>\r\n</div>\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Socket } from 'ngx-socket-io';\r\nimport { HttpParams, HttpClient } from '@angular/common/http';\r\nimport { Observable } from \"rxjs\";\r\nimport { environment } from \"../../environments/environment\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TimerService {\r\n\r\n  constructor(private socket: Socket, private httpClient: HttpClient) { }\r\n\r\n  sendMessage(message: string): void {\r\n    this.socket.emit('user message', message);\r\n  }\r\n\r\n  getMessages(): any {\r\n    return this.socket.fromEvent('user message');\r\n  }\r\n\r\n\r\n  startTimer(task_id: string, start: string):void {\r\n    this.socket.emit('timer', start, task_id);\r\n  }\r\n\r\n  stopTimer(task_id: string):void {\r\n    this.socket.emit('timer');\r\n  }\r\n\r\n  start(name: string):void {\r\n    this.socket.emit('startTimer', name);\r\n  }\r\n\r\n  stop(name: string):void {\r\n    this.socket.emit('stopTimer', name);\r\n\r\n    //this.socket.emit('getTimers');\r\n    this.getTime();\r\n  }\r\n\r\n  startTask(name: string):void {\r\n    this.socket.emit('startTask', name);\r\n  }\r\n\r\n  stopTask(name: string):void {\r\n    this.socket.emit('stopTask', name);\r\n  }\r\n\r\n  getTime(): Observable<any> {\r\n    return this.httpClient.get<any>(`${environment.apiUrl}/time`);\r\n  }\r\n\r\n  updateTime( taskToUpdate ): any{\r\n    let options = { datetime: taskToUpdate.datetime, _id: taskToUpdate._id };\r\n    return this.httpClient.request<any>('PUT', `${environment.apiUrl}/updateTime/`, { body: options });\r\n  }\r\n\r\n\r\n  getTimers(): Observable<any> {\r\n    return this.httpClient.get<any>(`${environment.apiUrl}/time`);\r\n  }\r\n\r\n  getDiff(name): Observable<any> {\r\n    let params = new HttpParams();\r\n    params = params.append('task_name', name);\r\n    console.log(\"getDiff(name) = \"+ name);\r\n    return this.httpClient.get<any>(`${environment.apiUrl}/diff`, {params: params});\r\n  }\r\n\r\n  updateTimer(name): Observable<any> {\r\n    let options = { task_name: name };\r\n    return this.httpClient.request<any>('PUT', `${environment.apiUrl}/updateTimer/`, { body: options });\r\n  }\r\n\r\n  \r\n  updateTotalTime(task_id): Observable<any> {\r\n\r\n    let options = { task_id: task_id };\r\n    // server side: create PUT('/updateTotalTime')\r\n    return this.httpClient.request<any>('PUT', `${environment.apiUrl}/updateTotalTime/`, { body: options });\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'project-management';\r\n}\r\n","<nav class=\"navbar navbar-light bg-dark\">\r\n  <!--<a [routerLink]=\"'project-management'\" routerLinkActive=\"active\" class=\"navbar-brand text-light\">Project Management</a>-->\r\n  <a [routerLink]=\"'project-management'\" routerLinkActive=\"active\" class=\"navbar-brand text-light\">Project Management</a>\r\n  <a [routerLink]=\"'tasks'\" class=\"navbar-brand text-light\" >Tasks</a>\r\n</nav>\r\n\r\n<div class=\"container\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ProjectManagementComponent } from \"./project-management/project-management.component\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbDatepickerModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\r\nimport { TasksComponent } from './tasks/tasks.component';\r\nimport { TaskComponent } from './task/task.component';\r\n//import { ProjectListComponent } from './projects/project-list/project-list.component';\r\nconst config: SocketIoConfig = { url: 'http://localhost:8001', options: {} };\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ProjectManagementComponent,\r\n    TasksComponent,\r\n    TaskComponent,\r\n    //ProjectListComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    SocketIoModule.forRoot(config),\r\n    FormsModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n\t  NgbDatepickerModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from \"rxjs\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport { Task } from \"../_models/task.model\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TasksService {\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n\r\n  getTasks(): Observable<any> {\r\n    return this.httpClient.get<any>(`${environment.apiUrl}/tasks`);\r\n\r\n  }\r\n\r\n  //getTasks(id): Observable<any>{\r\n    //return this.httpClient.get<any>(`${environment.apiUrl}/tasks/${id}`);\r\n  //}\r\n\r\n  create(newTask, projectId){\r\n    return this.httpClient.post<any>(`${environment.apiUrl}/task`, {name: newTask, project_id: projectId})\r\n  }\r\n\r\n  getTaskID(name): Observable<any>{\r\n   \treturn this.httpClient.get<any>(`${environment.apiUrl}/tasks`);\r\n  }\r\n\r\n  //getProjectId(task_id): Observable<any>{\r\n  // \treturn this.httpClient.get<any>(`${environment.apiUrl}/proj`);\r\n  //}\r\n\r\n\r\n\r\n  displayProjectTasks( arrayTasks, projectIdToKeep ): any{\r\n    var arrayProjectTasks;\r\n    var len = arrayTasks.length;\r\n    //alert(len + \"   \" +arrayTasks[0].project_id + \"   \" + arrayTasks[1].project_id + \"   \" + projectIdToKeep);\r\n    for (let i = 0; i <= arrayTasks.length; i++) {\r\n      if (!(arrayTasks[i].project_id === projectIdToKeep)) {\r\n        arrayTasks.splice(i, 1);\r\n        i--;\r\n      }\r\n    }\r\n    alert(len + \"   \" +arrayTasks[0].project_id +  \"   \" + projectIdToKeep);\r\n    return arrayTasks;\r\n\r\n\r\n  }\r\n\r\n  destroy(task): Observable<any> {\r\n    return this.httpClient.delete(`${environment.apiUrl}/task/${task._id}`);\r\n  }\r\n\r\n  removeTasks(arrayNames, nameToRemove): any {\r\n    for (let i = 0; i <= arrayNames.length; i++) {\r\n      if (arrayNames[i]._id === nameToRemove._id) {\r\n        arrayNames.splice(i, 1);\r\n        return arrayNames;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpParams, HttpClient } from '@angular/common/http';\r\nimport { Observable } from \"rxjs\";\r\nimport { Socket } from \"ngx-socket-io\";\r\nimport { environment } from \"../../environments/environment\";\r\nimport { Project } from \"../_models/project.model\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectsService {\r\n\r\n  constructor(private socket: Socket, private httpClient: HttpClient) { }\r\n\r\n  getAll(): Observable<any> {\r\n    return this.httpClient.get<any>(`${environment.apiUrl}/names`);\r\n  }\r\n\r\n  create( newName ): Observable<Project> {\r\n    return this.httpClient.post<any>(`${environment.apiUrl}/name`, {name: newName})\r\n      .pipe(map(newName => new Project(newName.name)));\r\n  }\r\n\r\n  destroy( name ): Observable<any> {\r\n    return this.httpClient.delete(`${environment.apiUrl}/name/${name._id}`);\r\n  }\r\n\r\n  removeProject( arrayNames, nameToRemove ): any{\r\n    for (let i = 0; i <= arrayNames.length; i++) {\r\n      if (arrayNames[i]._id === nameToRemove._id) {\r\n        arrayNames.splice(i, 1);\r\n        return arrayNames;\r\n      }\r\n    }\r\n  }\r\n\r\n  updateProject( nameToUpdate ): any{\r\n    let options = { name: nameToUpdate.name, _id: nameToUpdate._id };\r\n    return this.httpClient.request<any>('PUT', `${environment.apiUrl}/update/`, { body: options });\r\n    // return this.httpClient.request<any>('PUT', `${environment.apiUrl}/update/${nameToUpdate._id}/${nameToUpdate.name}`);\r\n  }\r\n\r\n  editProject( arrayNames, nameToEdit ): any{\r\n    for (let i = 0; i <= arrayNames.length; i++) {\r\n      if (arrayNames[i]._id === nameToEdit._id) {\r\n        arrayNames[i].name = nameToEdit.name;\r\n        return arrayNames;\r\n      }\r\n    }\r\n  }\r\n\r\n  getTimers(): Observable<any> {\r\n    return this.httpClient.get<any>(`${environment.apiUrl}/time`);\r\n  }\r\n\r\n  getDiff(name): Observable<any> {\r\n    let params = new HttpParams();\r\n    params = params.append('task_name', name);\r\n    console.log(\"getDiff(name) = \"+ name);\r\n    return this.httpClient.get<any>(`${environment.apiUrl}/diff`, {params: params});\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ProjectManagementComponent } from \"./project-management/project-management.component\";\r\nimport { TasksComponent } from \"./tasks/tasks.component\";\r\nimport {TaskComponent} from \"./task/task.component\";\r\n\r\nconst routes: Routes = [\r\n  {path: 'project-management', component: ProjectManagementComponent},\r\n  {path: 'project-management/tasks', component: TasksComponent},\r\n  {path: 'project-management/task', component: TaskComponent},\r\n  {path: 'project-management/task/:id', component: TaskComponent},\r\n  {path : 'tasks', component: TaskComponent},\r\n  {path : 'task', component: TaskComponent},\r\n  {\r\n        path: 'project-management/task',\r\n        component: TaskComponent,\r\n\r\n        children: [\r\n            { path: 'task/:id', component: TaskComponent }\r\n            //{ path: ':id', component: TaskComponent},\r\n\t\t\t      //{ path: '**', component: TaskComponent},\r\n        ]\r\n  },\r\n  //{ path: '**', redirectTo: '' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ProjectsService } from \"../_services/projects.service\";\r\nimport { TimerService } from \"../_services/timer.service\";\r\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { NgbDatepickerModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Project } from \"../_models/project.model\";\r\n\r\nimport { interval } from 'rxjs';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-projects-management',\r\n  templateUrl: './project-management.component.html',\r\n  styleUrls: ['./project-management.component.css']\r\n})\r\n\r\nexport class ProjectManagementComponent implements OnInit {\r\n  public newProject;\r\n  public projects;\r\n  public editProject = new Project();\r\n  newMessage: string;\r\n  messageList: string[] = [];\r\n  timeMessage: string;\r\n\r\n  constructor(\r\n    private projectsService: ProjectsService,\r\n    private modalService: NgbModal,\r\n    private timerService: TimerService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.projectsService.getAll().subscribe(returnProjects => {\r\n      this.projects = returnProjects.docs;\r\n    })\r\n\r\n  }\r\n\r\n  saveProject(): void {\r\n    this.projectsService.create(this.newProject).subscribe( saveProject => {\r\n      \tthis.projects.push(saveProject);\r\n    })\r\n\r\n  }\r\n\r\n  startTimer(): void {\r\n    this.timerService.sendMessage((this.timeMessage));\r\n    this.newMessage = '';\r\n  }\r\n\r\n\r\n  deleteProject(projectToDelete): void {\r\n    this.projectsService.destroy(projectToDelete).subscribe(success => {\r\n      this.projects = this.projectsService.removeProject(this.projects, projectToDelete);\r\n    }, error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  newEditProject(content, project): void {\r\n    this.editProject = project;\r\n    this.modalService.open(content).result.then((result) => {\r\n      this.saveEditedProject(this.editProject);\r\n    }, (reason) => {})\r\n  }\r\n\r\n  saveEditedProject(projectToEdit): void {\r\n    this.projectsService.updateProject(projectToEdit).subscribe(success => {\r\n      console.log(\"saveEditedProject: \"+JSON.stringify(projectToEdit));\r\n      this.projects = this.projectsService.editProject(this.projects, projectToEdit);\r\n    }, error => {\r\n      console.log(error);\r\n    })\r\n\r\n  }\r\n}\r\n","<input [(ngModel)]=\"newProject\">\r\n<button (click)=\"saveProject()\">Save</button>\r\n\r\n\r\n<h3>Projects!</h3>\r\n<div *ngFor=\"let project of projects\">\r\n  <div class=\"row\">\r\n\r\n    <a [routerLink]= \"['task', project._id]\">{{ project.name }}</a>\r\n    <!--<a [routerLink]= \"['task', project.name]\">{{ project.name }}</a>-->\r\n    <!--path: 'task/:id'-->\r\n    <!--<a [routerLink]=\"'tasks'\">{{ project.name }}</a>-->\r\n\r\n    <!--<a [routerLink]=\"'task'\" (click)=\"saveId(project._id)\">{{ project.name }}</a>-->\r\n\r\n   <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteProject(project)\">Delete</button>\r\n    <button class=\"hui-button hui-button-small hui-button-icon-only js-edit-entry\" (click)=\"newEditProject(editModal, project)\" title=\"Edit Entry\" type=\"button\">\r\n           <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"currentColor\">\r\n             <path d=\"M5 10L2 7l7-7 3 3-7 7zm-5 2l1-4 3 3-4 1z\"></path>\r\n           </svg>\r\n     </button>\r\n </div>\r\n</div>\r\n\r\n<ng-template #editModal let-modal>\r\n <div class=\"modal-header\">\r\n   <h4 class=\"modal-title\">Edit Project</h4>\r\n   <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\">\r\n     <span aria-hidden=\"true\">&times;</span>\r\n   </button>\r\n </div>\r\n <div class=\"modal-body\">\r\n     <div>\r\n       <label for=\"editProjectInput\">Edit the selected project:</label>\r\n       <div class=\"input-group\">\r\n         <input id=\"editProjectInput\" class=\"form-control\" [(ngModel)]=\"editProject.name\" project=\"Edit Project\">\r\n\r\n       </div>\r\n     </div>\r\n </div>\r\n <div class=\"modal-footer\">\r\n   <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"modal.close()\">Save</button>\r\n </div>\r\n</ng-template>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","export class Project {\r\n  name: string;\r\n  id: string;\r\n  totalTime: string;\r\n\r\n  constructor(name: string = '', id: string = '', totalTime:string = '') {\r\n    this.name = name;\r\n    this.id = id;\r\n    this.totalTime = totalTime;\r\n  }\r\n}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}